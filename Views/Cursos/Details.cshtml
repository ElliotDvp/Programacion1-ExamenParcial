@model ExParcial.Models.Curso

@{
    ViewData["Title"] = "Detalle del Curso";
    var success = TempData["Success"] as string;
    var error = TempData["Error"] as string;
}

<h2 class="mb-4">Detalles del Curso</h2>

@if (!string.IsNullOrEmpty(success))
{
    <div class="alert alert-success" role="alert">@success</div>
}
@if (!string.IsNullOrEmpty(error))
{
    <div class="alert alert-danger" role="alert">@error</div>
}

@if (!ViewData.ModelState.IsValid)
{
    <div class="alert alert-danger" role="alert">
        <ul class="mb-0">
            @foreach (var e in ViewData.ModelState.Values.SelectMany(v => v.Errors))
            {
                <li>@e.ErrorMessage</li>
            }
        </ul>
    </div>
}

<div class="card shadow-sm mb-4">
    <div class="card-body">
        <h4 class="card-title">@Model.Nombre (@Model.Codigo)</h4>
        <p class="card-text">
            <strong>Créditos:</strong> @Model.Creditos <br />
            <strong>Cupo máximo:</strong> @Model.CupoMaximo <br />
            <strong>Horario:</strong> @Model.HorarioInicio.ToString(@"hh\:mm") - @Model.HorarioFin.ToString(@"hh\:mm") <br />
            <strong>Estado:</strong> @(Model.Activo ? "Activo" : "Inactivo")
        </p>

        <form asp-controller="Matriculas" asp-action="Create" method="post" class="mt-3">
            @Html.AntiForgeryToken()
            <input type="hidden" name="cursoId" value="@Model.Id" />
            <button type="submit" class="btn btn-success">
                <i class="bi bi-plus-circle"></i> Inscribirse
            </button>
            <a asp-action="Index" class="btn btn-secondary ms-2">Volver</a>
        </form>
    </div>
</div>
